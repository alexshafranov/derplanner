//: // matching with previously bound variables
//:
//: plnnr::Fact_Table* a = plnnr::find_table(db, "a");
//: plnnr::add_entry(a, 1, 2, 3);
//: plnnr::add_entry(a, 2, 2, 2);
//: plnnr::add_entry(a, 3, 3, 1);
//: plnnr::add_entry(a, 1, 3, 3);
//:
//! check_plan("p!(2, 2) p!(1, 3)", pstate, domain);
//!
domain run_5
{
    world { a(int32, int32, int32) }

    primitive { p!(int32, int32) }

    task r()
    {
        each( a(x, y, y) ) -> [ p!(x, y) ]
    }
}
