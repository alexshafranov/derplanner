
domain travel
{
    world
    {
        start( id32 )
        finish( id32 )
        short_distance( id32, id32 )
        long_distance( id32, id32 )
        airport( id32, id32 )
    }

    primitive
    {
        taxi!( id32, id32 )
        plane!( id32, id32 )
    }

    macro
    {
        start_and_finish(x, y) = ( start(x) & finish(y) )
    }

    task root()
    {
        case( start_and_finish(s, f) ) -> [ travel(s, f) ]
    }

    task travel(x, y)
    {
        case( short_distance(x, y) ) -> [ taxi!(x, y) ]

        case( long_distance(x, y) ) -> [ travel_by_plane(x, y) ]
    }

    task travel_by_plane(x, y)
    {
        macro airports(ax, ay) = ( airport(x, ax) & airport(y, ay) )

        case( airports(ax, ay) ) -> [ travel(x, ax), plane!(ax, ay), travel(ay, y) ]
    }
}
